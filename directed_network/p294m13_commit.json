[
   [
      "jianqiao",
      "BinaryOperationID.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "SimpleScalarSeparateChainingHashTable.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "SubstringOperation.cpp",
      2
   ],
   [
      "jianqiao",
      "UnaryOperation.hpp",
      2
   ],
   [
      "jianqiao",
      "DateExtractOperation.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "NumericTypeSafeCoercibility.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "DateType.cpp",
      1
   ],
   [
      "jianqiao",
      "HashTableFactory.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "HashTable.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AggregateFunctionSum.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "storage-formats-quickstep.html",
      1
   ],
   [
      "Hakan Memisoglu",
      "FinalizeAggregationOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "HashJoinOperator.cpp",
      10
   ],
   [
      "jianqiao",
      "SubstringOperation.cpp",
      2
   ],
   [
      "Zuyu Zhang",
      "PartitionSchemeHeader.cpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "TableGeneratorOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "ScalarUnaryExpression.cpp",
      11
   ],
   [
      "Tianrun",
      "WorkOrder.proto",
      3
   ],
   [
      "Jianqiao Zhu",
      "BoolType.cpp",
      1
   ],
   [
      "jianqiao",
      "AggregationOperationState.hpp",
      2
   ],
   [
      "Tianrun",
      "Resolver.cpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "SortMergeRunOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "NullCoercibilityCheckMacro.hpp",
      2
   ],
   [
      "jianqiao",
      "TypeUtil.hpp",
      2
   ],
   [
      "Tianrun",
      "UnionAll.hpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "StorageBlock.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "CommonSubexpressionExtraction.cpp",
      2
   ],
   [
      "jianqiao",
      "DatetimeLit.hpp",
      2
   ],
   [
      "jianqiao",
      "SubtractBinaryOperation.hpp",
      2
   ],
   [
      "jianqiao",
      "BoolType.hpp",
      1
   ],
   [
      "jianqiao",
      "SubstringOperation.hpp",
      2
   ],
   [
      "jianqiao",
      "Type.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AsciiStringSuperType.hpp",
      3
   ],
   [
      "jianqiao",
      "PatternMatchingComparison.cpp",
      1
   ],
   [
      "jianqiao",
      "ModuloBinaryOperation.hpp",
      2
   ],
   [
      "jianqiao",
      "StringUtil.hpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "SampleOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "BinaryOperationFactory.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "TypeUtil.hpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "QueryContext.hpp",
      2
   ],
   [
      "jianqiao",
      "AddBinaryOperation.hpp",
      7
   ],
   [
      "Jianqiao Zhu",
      "LongType.hpp",
      3
   ],
   [
      "jianqiao",
      "Cast.hpp",
      11
   ],
   [
      "Tianrun",
      "ExecutionGenerator.cpp",
      3
   ],
   [
      "jianqiao",
      "IntType.cpp",
      2
   ],
   [
      "jianqiao",
      "AggregationOperationState.cpp",
      10
   ],
   [
      "Tianrun",
      "ParseSetOperation.hpp",
      3
   ],
   [
      "jianqiao",
      "DoubleType.cpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "NestedLoopsJoinOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "SubtractBinaryOperation.cpp",
      2
   ],
   [
      "jianqiao",
      "DatetimeIntervalType.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "StarSchemaSimpleCostModel.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ScalarSharedExpression.hpp",
      1
   ],
   [
      "jianqiao",
      "UnaryExpression.cpp",
      13
   ],
   [
      "jianqiao",
      "ArithmeticUnaryOperators.hpp",
      2
   ],
   [
      "Tianrun",
      "PhysicalType.hpp",
      3
   ],
   [
      "jianqiao",
      "Resolver.cpp",
      5
   ],
   [
      "Jianqiao Zhu",
      "PatternMatchingComparison.cpp",
      2
   ],
   [
      "jianqiao",
      "Operation.hpp",
      2
   ],
   [
      "jianqiao",
      "HashTablePool.hpp",
      2
   ],
   [
      "jianqiao",
      "CMathUnaryOperations.hpp",
      2
   ],
   [
      "Tianrun",
      "SqlParser.ypp",
      3
   ],
   [
      "Hakan Memisoglu",
      "HashJoinOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "ScalarAttribute.hpp",
      12
   ],
   [
      "Hakan Memisoglu",
      "Optimizer.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "PackedPayloadHashTable.cpp",
      7
   ],
   [
      "Jianqiao Zhu",
      "NumericTypeUnifier.hpp",
      2
   ],
   [
      "jianqiao",
      "Common.hpp",
      2
   ],
   [
      "jianqiao",
      "YearMonthIntervalType.cpp",
      1
   ],
   [
      "jianqiao",
      "MultiplyBinaryOperation.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "DoubleType.hpp",
      3
   ],
   [
      "Hakan Memisoglu",
      "InitializeAggregationOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "Aggregate.test",
      3
   ],
   [
      "Harshad Deshmukh",
      "SortRunGenerationOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "AsciiStringUnaryOperations.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "PhysicalGenerator.cpp",
      5
   ],
   [
      "Jianqiao Zhu",
      "HashError.hpp",
      1
   ],
   [
      "Harshad Deshmukh",
      "FinalizeAggregationOperator.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "QueryManagerSingleNode.cpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "TextScanOperator.hpp",
      1
   ],
   [
      "Hakan Memisoglu",
      "ExecutionGenerator.hpp",
      1
   ],
   [
      "jianqiao",
      "WindowAggregationOperationState.cpp",
      10
   ],
   [
      "Tianrun",
      "UnionAllOperator.cpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "ScalarLiteral.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AsciiStringUnaryOperations.hpp",
      1
   ],
   [
      "jianqiao",
      "ReuseAggregateExpressions.hpp",
      7
   ],
   [
      "jianqiao",
      "CharType.hpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "CreateTableOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "DatetimeType.cpp",
      1
   ],
   [
      "jianqiao",
      "CharType.cpp",
      2
   ],
   [
      "jianqiao",
      "ScalarSharedExpression.hpp",
      11
   ],
   [
      "Harshad Deshmukh",
      "BuildAggregationExistenceMapOperator.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "CreateTableOperator.hpp",
      2
   ],
   [
      "Tianrun",
      "StarSchemaSimpleCostModel.hpp",
      3
   ],
   [
      "jianqiao",
      "Join.test",
      3
   ],
   [
      "jianqiao",
      "ArithmeticUnaryOperations.cpp",
      2
   ],
   [
      "Zuyu Zhang",
      "PartitionSchemeHeader.hpp",
      3
   ],
   [
      "Hakan Memisoglu",
      "DestroyHashOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "DivideBinaryOperation.cpp",
      2
   ],
   [
      "jianqiao",
      "OptimizerTest.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "CatalogRelation.hpp",
      2
   ],
   [
      "Tianrun",
      "OneToOne.cpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "ThreadPrivateCompactKeyHashTable.hpp",
      1
   ],
   [
      "spehl",
      "apache-quickstep-incubating-0.1.0.tar.gz",
      1
   ],
   [
      "Jianqiao Zhu",
      "NullType.hpp",
      3
   ],
   [
      "Hakan Memisoglu",
      "ExecutionSerializer.hpp",
      1
   ],
   [
      "jianqiao",
      "UnaryOperation.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "StarSchemaSimpleCostModel.cpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "DestroyAggregationStateOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "ArithmeticBinaryFunctorOverloads.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "DestroyHashOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "DoubleType.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "HashTable.proto",
      3
   ],
   [
      "Jianqiao Zhu",
      "CastOperation.cpp",
      2
   ],
   [
      "jianqiao",
      "SqlParser_gen.hpp",
      5
   ],
   [
      "cramja",
      "QsProtobufGenerateCpp.cmake",
      3
   ],
   [
      "jianqiao",
      "UnaryOperationFactory.hpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "SortMergeRunOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "CommonSubexpressionExtraction.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "DatetimeType.hpp",
      3
   ],
   [
      "spehl",
      "apache-quickstep-incubating-0.1.0.tar.gz.asc",
      1
   ],
   [
      "jianqiao",
      "CastOperation.hpp",
      2
   ],
   [
      "jianqiao",
      "BinaryExpression.cpp",
      13
   ],
   [
      "jianqiao",
      "Dispatchers.hpp",
      2
   ],
   [
      "jianqiao",
      "FloatType.hpp",
      2
   ],
   [
      "Tianrun",
      "RelationalOperator.hpp",
      3
   ],
   [
      "jianqiao",
      "BinaryOperation.cpp",
      2
   ],
   [
      "jianqiao",
      "BinaryOperationID.cpp",
      2
   ],
   [
      "Tianrun",
      "Join.cpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "AggregationOperator.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "TypeRegistrar.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "HashJoinOperator.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "CollapseSelection.hpp",
      1
   ],
   [
      "jianqiao",
      "SetOperation.hpp",
      3
   ],
   [
      "jianqiao",
      "Select.test",
      5
   ],
   [
      "Jianqiao Zhu",
      "CollisionFreeVectorTable.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AggregationOperationState.hpp",
      3
   ],
   [
      "jianqiao",
      "StarSchemaSimpleCostModel.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "CharType.hpp",
      3
   ],
   [
      "Hakan Memisoglu",
      "WindowAggregationOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "DateType.hpp",
      3
   ],
   [
      "spehl",
      "apache-quickstep-incubating-0.1.0.tar.gz.sha512",
      1
   ],
   [
      "Jianqiao Zhu",
      "CharType.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "HashTableBase.hpp",
      2
   ],
   [
      "jianqiao",
      "IntType.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "index.html",
      2
   ],
   [
      "Jianqiao Zhu",
      "ReuseAggregateExpressions.hpp",
      2
   ],
   [
      "jianqiao",
      "CommonSubexpressionExtraction.cpp",
      4
   ],
   [
      "jianqiao",
      "ReuseAggregateExpressions.cpp",
      7
   ],
   [
      "jianqiao",
      "ScalarUnaryExpression.hpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "ArithmeticBinaryFunctorOverloads.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "IntType.hpp",
      3
   ],
   [
      "jianqiao",
      "ColumnVectorsValueAccessor.hpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "NestedLoopsJoinOperator.cpp",
      1
   ],
   [
      "jianqiao",
      "ArithmeticBinaryOperation.hpp",
      2
   ],
   [
      "jianqiao",
      "TypedValue.proto",
      2
   ],
   [
      "jianqiao",
      "SqlLexer_gen.hpp",
      5
   ],
   [
      "Jianqiao Zhu",
      "ThreadPrivateCompactKeyHashTable.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "BinaryOperation.hpp",
      1
   ],
   [
      "jianqiao",
      "PackedPayloadHashTable.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "ReuseAggregateExpressions.cpp",
      5
   ],
   [
      "Zuyu Zhang",
      "InsertDestination.cpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "UnaryExpression.cpp",
      1
   ],
   [
      "Harshad Deshmukh",
      "UpdateOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "Cast.cpp",
      13
   ],
   [
      "Harshad Deshmukh",
      "SampleOperator.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "Predicate.hpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "ScalarBinaryExpression.cpp",
      14
   ],
   [
      "Tianrun",
      "SetOperation.test",
      3
   ],
   [
      "Harshad Deshmukh",
      "NestedLoopsJoinOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "ThreadPrivateCompactKeyHashTable.hpp",
      2
   ],
   [
      "jianqiao",
      "DateExtractOperation.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "CommonSubexpression.test",
      4
   ],
   [
      "Harshad Deshmukh",
      "custom.scss",
      1
   ],
   [
      "Harshad Deshmukh",
      "DestroyAggregationStateOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "ColumnVector.hpp",
      13
   ],
   [
      "jianqiao",
      "UnaryOperationFactory.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AggregationHandleAvg.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "YearMonthIntervalType.cpp",
      1
   ],
   [
      "jianqiao",
      "CollapseSelection.cpp",
      7
   ],
   [
      "jianqiao",
      "DatetimeType.hpp",
      2
   ],
   [
      "Tianrun",
      "UnionAllOperator.hpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "NegationPredicate.cpp",
      11
   ],
   [
      "Harshad Deshmukh",
      "BuildLIPFilterOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "ScalarLiteral.cpp",
      21
   ],
   [
      "jianqiao",
      "NamedExpression.cpp",
      8
   ],
   [
      "jianqiao",
      "FloatType.cpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "QueryPlan.proto",
      2
   ],
   [
      "jianqiao",
      "BoolType.cpp",
      1
   ],
   [
      "Hakan Memisoglu",
      "BuildAggregationExistenceMapOperator.hpp",
      1
   ],
   [
      "Harshad Deshmukh",
      "main.css",
      1
   ],
   [
      "jianqiao",
      "ArithmeticUnaryOperations.hpp",
      2
   ],
   [
      "jianqiao",
      "SMAIndexSubBlock.cpp",
      2
   ],
   [
      "Tianrun",
      "SqlLexer.lpp",
      3
   ],
   [
      "Zuyu Zhang",
      "NUMAPlacementScheme_unittest.cpp",
      3
   ],
   [
      "jianqiao",
      "TypedValue.hpp",
      2
   ],
   [
      "jianqiao",
      "UnaryExpression.hpp",
      13
   ],
   [
      "jianqiao",
      "Type.proto",
      2
   ],
   [
      "jianqiao",
      "TypedValue.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ScalarUnaryExpression.hpp",
      3
   ],
   [
      "Hakan Memisoglu",
      "InsertOperator.hpp",
      1
   ],
   [
      "Tianrun",
      "ParseSubqueryExpression.hpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "LinearOpenAddressingHashTable.hpp",
      2
   ],
   [
      "jianqiao",
      "TypeConcept.hpp",
      1
   ],
   [
      "Hakan Memisoglu",
      "ExecutionSerializer.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "WindowAggregateFunctionSum.cpp",
      2
   ],
   [
      "jianqiao",
      "SetOperation.test",
      3
   ],
   [
      "jianqiao",
      "ArithmeticBinaryOperators.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "Scalar.hpp",
      12
   ],
   [
      "Jianqiao Zhu",
      "ComparisonPredicate.hpp",
      11
   ],
   [
      "jianqiao",
      "BinaryOperationFactory.cpp",
      2
   ],
   [
      "Zuyu Zhang",
      "ExecutionGenerator.cpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "QueryManagerSingleNode.hpp",
      2
   ],
   [
      "Zuyu Zhang",
      "Create.test",
      15
   ],
   [
      "Jianqiao Zhu",
      "ScalarBinaryExpression.hpp",
      14
   ],
   [
      "Jianqiao Zhu",
      "OperationFactory.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "ParseBasicExpressions.cpp",
      2
   ],
   [
      "jianqiao",
      "BinaryOperationWrapper.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ExecutionGenerator.cpp",
      4
   ],
   [
      "jianqiao",
      "SqlParser_gen.cpp",
      5
   ],
   [
      "jianqiao",
      "StringUtil.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "SqlLexer.lpp",
      2
   ],
   [
      "jianqiao",
      "CastOperation.cpp",
      2
   ],
   [
      "Tianrun",
      "StarSchemaSimpleCostModel.cpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "ScalarSharedExpression.cpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "DropTableOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "ScalarAttribute.cpp",
      12
   ],
   [
      "Jianqiao Zhu",
      "HashTablePool.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "2017-03-30-storage-formats-quickstep.markdown",
      1
   ],
   [
      "Harshad Deshmukh",
      "WindowAggregationOperator.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ExtractCommonSubexpression.hpp",
      2
   ],
   [
      "jianqiao",
      "ComparisonUtil.hpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "AggregationOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "TransitiveClosure.hpp",
      2
   ],
   [
      "jianqiao",
      "OperationSignature.hpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "BuildHashOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "ThreadPrivateNumericHashTable.cpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "TextScanOperator.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "BinaryOperationWrapper.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "MultiplyBinaryOperation.hpp",
      1
   ],
   [
      "jianqiao",
      "Scalar.hpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "ScalarUnaryExpression.cpp",
      3
   ],
   [
      "jianqiao",
      "ExpressionType.hpp",
      11
   ],
   [
      "jianqiao",
      "DateType.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "InitializeAggregationOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "VarCharType.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AggregationHandleSum.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "Select.test",
      2
   ],
   [
      "jianqiao",
      "AttributeReference.hpp",
      11
   ],
   [
      "jianqiao",
      "CMathBinaryOperations.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "Type.proto",
      1
   ],
   [
      "Zuyu Zhang",
      "InsertDestinationInterface.hpp",
      3
   ],
   [
      "jianqiao",
      "ScalarLiteral.hpp",
      21
   ],
   [
      "jianqiao",
      "TemplateUtil_unittest.cpp",
      2
   ],
   [
      "Tianrun",
      "SimpleCostModel.cpp",
      3
   ],
   [
      "jianqiao",
      "CommonSubexpression.cpp",
      11
   ],
   [
      "jianqiao",
      "CommonSubexpression.test",
      4
   ],
   [
      "jianqiao",
      "DatetimeIntervalType.cpp",
      1
   ],
   [
      "jianqiao",
      "SimpleCase.hpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "NegationPredicate.hpp",
      11
   ],
   [
      "jianqiao",
      "StarSchemaSimpleCostModel.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AddBinaryOperation.hpp",
      1
   ],
   [
      "jianqiao",
      "HashTable.proto",
      2
   ],
   [
      "jianqiao",
      "HashError.hpp",
      11
   ],
   [
      "jianqiao",
      "PhysicalGenerator.cpp",
      11
   ],
   [
      "jianqiao",
      "ArithmeticBinaryOperations.hpp",
      2
   ],
   [
      "jianqiao",
      "NestedLoopsJoinOperator.cpp",
      10
   ],
   [
      "Jianqiao Zhu",
      "ScalarCaseExpression.cpp",
      12
   ],
   [
      "Harshad Deshmukh",
      "QueryManagerBase.hpp",
      2
   ],
   [
      "jianqiao",
      "DivideBinaryOperation.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "SubstringOperation.hpp",
      1
   ],
   [
      "Tianrun",
      "WorkOrderFactory.cpp",
      3
   ],
   [
      "jianqiao",
      "OperationSignature.cpp",
      2
   ],
   [
      "Zuyu Zhang",
      "HashJoinOperator_unittest.cpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "WorkOrdersContainer.hpp",
      4
   ],
   [
      "jianqiao",
      "OperationFactory.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "Type.hpp",
      3
   ],
   [
      "jianqiao",
      "ColumnVector.cpp",
      2
   ],
   [
      "jianqiao",
      "PackedPayloadHashTable.hpp",
      2
   ],
   [
      "jianqiao",
      "UnaryOperationWrapper.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "PartitionedHashTablePool.hpp",
      4
   ],
   [
      "Jianqiao Zhu",
      "ParseExpression.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "TypeFactory.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "CMathBinaryOperations.hpp",
      1
   ],
   [
      "Hakan Memisoglu",
      "UpdateOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "PredicateWithList.cpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "WindowAggregationHandle.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "Scalar.cpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "CollapseSelection.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "DeleteOperator.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "HashTableBase.hpp",
      3
   ],
   [
      "jianqiao",
      "UnaryOperationID.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ArithmeticBinaryOperations.hpp",
      1
   ],
   [
      "Zuyu Zhang",
      "PartitionScheme_unittest.cpp",
      3
   ],
   [
      "jianqiao",
      "DateType.cpp",
      1
   ],
   [
      "jianqiao",
      "SqlParser.ypp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AggregateFunctionAvg.cpp",
      2
   ],
   [
      "jianqiao",
      "Type.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "AggregationOperationState.hpp",
      2
   ],
   [
      "Tianrun",
      "UnionAllOperator.hpp",
      3
   ],
   [
      "jianqiao",
      "AttributeReference.cpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "DatetimeType.cpp",
      1
   ],
   [
      "Hakan Memisoglu",
      "TableGeneratorOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "LogicalGenerator.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "InsertOperator.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "CreateIndexOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "UnaryOperationID.cpp",
      2
   ],
   [
      "jianqiao",
      "CollisionFreeVectorTable.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "QueryContext.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "SeparateChainingHashTable.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "CMathUnaryOperations.hpp",
      2
   ],
   [
      "jianqiao",
      "AddBinaryOperation.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "NumericSuperType.hpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "ScalarLiteral.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "SaveBlocksOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "TypeIDSelectors.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "Predicate.cpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "WindowAggregationHandle.hpp",
      2
   ],
   [
      "jianqiao",
      "TypeList.hpp",
      2
   ],
   [
      "jianqiao",
      "BinaryOperation.hpp",
      7
   ],
   [
      "Tianrun",
      "UnionAllOperator.cpp",
      3
   ],
   [
      "jianqiao",
      "CollapseSelection.hpp",
      7
   ],
   [
      "Hakan Memisoglu",
      "SortRunGenerationOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "VarCharType.hpp",
      2
   ],
   [
      "jianqiao",
      "AsciiStringSuperType.hpp",
      1
   ],
   [
      "jianqiao",
      "OperationFactory.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "DAG.hpp",
      4
   ],
   [
      "Zuyu Zhang",
      "InsertDestination.hpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "ParseBasicExpressions.hpp",
      2
   ],
   [
      "jianqiao",
      "ScalarCaseExpression_unittest.cpp",
      3
   ],
   [
      "jianqiao",
      "ThreadPrivateCompactKeyHashTable.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "SelectOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "LogicalType.hpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "DatetimeIntervalType.hpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "FirstQuery.html",
      1
   ],
   [
      "Harshad Deshmukh",
      "BuildHashOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "NumericTypeSafeCoercibility.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "AggregationOperationState.cpp",
      10
   ],
   [
      "jianqiao",
      "PatternMatcher.hpp",
      14
   ],
   [
      "jianqiao",
      "TypeID.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "ExtractCommonSubexpression.cpp",
      4
   ],
   [
      "jianqiao",
      "SimpleCase.cpp",
      11
   ],
   [
      "Hakan Memisoglu",
      "SaveBlocksOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "WindowAggregationOperationState.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "Expressions.proto",
      13
   ],
   [
      "Hakan Memisoglu",
      "Operator.proto",
      2
   ],
   [
      "jianqiao",
      "CommonSubexpression.hpp",
      11
   ],
   [
      "Tianrun",
      "ParseSubqueryExpression.cpp",
      3
   ],
   [
      "jianqiao",
      "LongType.hpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "BuildLIPFilterOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "YearMonthIntervalType.hpp",
      3
   ],
   [
      "jianqiao",
      "ExpressionUtil.hpp",
      11
   ],
   [
      "Jianqiao Zhu",
      "ExpressionFactories.cpp",
      13
   ],
   [
      "Hakan Memisoglu",
      "DeleteOperator.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "BinaryExpression.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ScalarCache.hpp",
      7
   ],
   [
      "Harshad Deshmukh",
      "PackedPayloadHashTable.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "DatetimeIntervalType.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "FloatType.hpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "TypeFactory.hpp",
      1
   ],
   [
      "jianqiao",
      "TMP.hpp",
      2
   ],
   [
      "cramja",
      "index.html",
      3
   ],
   [
      "jianqiao",
      "ExtractCommonSubexpression.hpp",
      7
   ],
   [
      "jianqiao",
      "TypeListMetaFunctions.hpp",
      2
   ],
   [
      "jianqiao",
      "NumericTypeUnifier.hpp",
      1
   ],
   [
      "jianqiao",
      "TPCH.test",
      3
   ],
   [
      "Harshad Deshmukh",
      "RelationalOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "BinaryExpression.hpp",
      13
   ],
   [
      "jianqiao",
      "ScalarSharedExpression.cpp",
      10
   ],
   [
      "jianqiao",
      "Resolver.hpp",
      5
   ],
   [
      "jianqiao",
      "CommonSubexpressionExtraction.hpp",
      4
   ],
   [
      "jianqiao",
      "ExtractCommonSubexpression.cpp",
      7
   ],
   [
      "jianqiao",
      "TypeID.hpp",
      2
   ],
   [
      "jianqiao",
      "OperationUtil.hpp",
      2
   ],
   [
      "Tianrun",
      "ExecutionGenerator.hpp",
      3
   ],
   [
      "jianqiao",
      "NullType.hpp",
      2
   ],
   [
      "jianqiao",
      "StorageBlock.cpp",
      10
   ],
   [
      "jianqiao",
      "Comparison.hpp",
      2
   ],
   [
      "jianqiao",
      "HashTableBase.hpp",
      2
   ],
   [
      "jianqiao",
      "TypeRegistrar.hpp",
      1
   ],
   [
      "jianqiao",
      "YearMonthIntervalType.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "TypeID.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "PackedPayloadHashTable.hpp",
      8
   ],
   [
      "Harshad Deshmukh",
      "DAG_unittest.cpp",
      4
   ],
   [
      "Jianqiao Zhu",
      "WindowAggregateFunctionAvg.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ComparisonPredicate.cpp",
      12
   ],
   [
      "Harshad Deshmukh",
      "AggregationOperationState.cpp",
      4
   ],
   [
      "jianqiao",
      "TypeFactory.hpp",
      1
   ],
   [
      "jianqiao",
      "TemplateUtil.hpp",
      4
   ],
   [
      "cramja",
      "release.html",
      1
   ],
   [
      "Jianqiao Zhu",
      "NullCoercibilityCheckMacro.hpp",
      1
   ],
   [
      "jianqiao",
      "MultiplyBinaryOperation.hpp",
      7
   ],
   [
      "Tianrun",
      "ParseStatement.hpp",
      3
   ],
   [
      "Harshad Deshmukh",
      "HashJoinOperator.hpp",
      2
   ],
   [
      "jianqiao",
      "ExecutionGenerator.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "TypeSynthesizer.hpp",
      1
   ],
   [
      "jianqiao",
      "TypeFactory.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "AsciiStringBinaryOperations.hpp",
      1
   ],
   [
      "Harshad Deshmukh",
      "QueryManagerSingleNode_unittest.cpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "HashTablePool.hpp",
      2
   ],
   [
      "jianqiao",
      "NumericCastOperation.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "VarCharType.hpp",
      3
   ],
   [
      "jianqiao",
      "NamedExpression.hpp",
      11
   ],
   [
      "jianqiao",
      "ModuloBinaryOperation.cpp",
      2
   ],
   [
      "Zuyu Zhang",
      "Resolver.cpp",
      3
   ],
   [
      "jianqiao",
      "TypeSynthesizer.hpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "LogicalGenerator.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "TypeIDSelectors.hpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "ScalarCaseExpression.hpp",
      12
   ],
   [
      "Jianqiao Zhu",
      "PredicateWithList.hpp",
      11
   ],
   [
      "Zuyu Zhang",
      "StorageBlock.cpp",
      3
   ],
   [
      "jianqiao",
      "LongType.cpp",
      2
   ],
   [
      "jianqiao",
      "ColumnVectorCache.hpp",
      4
   ],
   [
      "Jianqiao Zhu",
      "Expression.hpp",
      11
   ],
   [
      "Tianrun",
      "Select.test",
      6
   ],
   [
      "Jianqiao Zhu",
      "VarCharType.cpp",
      2
   ],
   [
      "Jianqiao Zhu",
      "Type.cpp",
      2
   ],
   [
      "Zuyu Zhang",
      "CatalogRelation.cpp",
      3
   ],
   [
      "Zuyu Zhang",
      "WorkOrder.proto",
      3
   ],
   [
      "Zuyu Zhang",
      "Catalog.proto",
      3
   ],
   [
      "Hakan Memisoglu",
      "SelectOperator.hpp",
      1
   ],
   [
      "jianqiao",
      "AsciiStringBinaryOperations.hpp",
      2
   ],
   [
      "spehl",
      "apache-quickstep-incubating-0.1.0.tar.gz.sha256",
      1
   ],
   [
      "jianqiao",
      "Operation.proto",
      2
   ],
   [
      "jianqiao",
      "SqlLexer_gen.cpp",
      5
   ],
   [
      "Jianqiao Zhu",
      "WindowAggregationHandleAvg.cpp",
      2
   ],
   [
      "jianqiao",
      "NumericSuperType.hpp",
      2
   ],
   [
      "Hakan Memisoglu",
      "CreateIndexOperator.hpp",
      1
   ],
   [
      "Hakan Memisoglu",
      "ExecutionGenerator.cpp",
      1
   ],
   [
      "Jianqiao Zhu",
      "HashTableFactory.hpp",
      3
   ],
   [
      "Tianrun",
      "SimpleCostModel.hpp",
      3
   ],
   [
      "Jianqiao Zhu",
      "TypeConcept.hpp",
      1
   ],
   [
      "Harshad Deshmukh",
      "DropTableOperator.hpp",
      2
   ],
   [
      "Harshad Deshmukh",
      "CollisionFreeVectorTable.hpp",
      2
   ]
]